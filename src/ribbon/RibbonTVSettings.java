/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ribbon;

import jtvprog.JTVProg;
import ribbon.RibbonDirFrame;

/**
 *
 * @author Stanislav Nepochatov <spoilt.exile@gmail.com>
 */
public class RibbonTVSettings extends javax.swing.JDialog {
    
    private Boolean initRun = true;
    
    private java.util.Properties releaseProps;

    /**
     * Creates new form RibbonTVSettings
     */
    public RibbonTVSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        releaseProps = JTVProg.tvApp.getProperties("Release.properties", JTVProg.class.getResourceAsStream("Release.properties"));
        this.channelRelease.setSelected(Boolean.parseBoolean(releaseProps.getProperty("release_channel")));
        this.dayRelease.setSelected(Boolean.parseBoolean(releaseProps.getProperty("release_day")));
        this.channelDirs.setText(releaseProps.getProperty("release_chn_dir"));
        this.dayDirs.setText(releaseProps.getProperty("release_day_dir"));
        this.allowPassedChRelease.setSelected(Boolean.parseBoolean(releaseProps.getProperty("release_aloow_incomplete")));
        this.userLable.setText("Текущий пользователь: " + JTVProg.tvApp.CURR_LOGIN);
        initRun = false;
    }
    
    /**
     * Unlock this buttons.
     */
    public void unlockButs() {
        if (this.channelRelease.isSelected()) {
            this.channelDirBut.setEnabled(true);
        }
        if (this.dayRelease.isSelected()) {
            this.dayDirBut.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        channelRelease = new javax.swing.JCheckBox();
        channelDirBut = new javax.swing.JButton();
        dayDirs = new javax.swing.JTextField();
        dayRelease = new javax.swing.JCheckBox();
        channelDirs = new javax.swing.JTextField();
        dayDirBut = new javax.swing.JButton();
        allowPassedChRelease = new javax.swing.JCheckBox();
        cancelBut = new javax.swing.JButton();
        saveBut = new javax.swing.JButton();
        userLable = new javax.swing.JLabel();
        reloginBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Настройки выпуска в систему \"Стрічка\"");
        setResizable(false);

        channelRelease.setText("Выпуск по каналам");
        channelRelease.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                channelReleaseItemStateChanged(evt);
            }
        });

        channelDirBut.setText("Выбрать");
        channelDirBut.setEnabled(false);
        channelDirBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                channelDirButActionPerformed(evt);
            }
        });

        dayDirs.setEditable(false);
        dayDirs.setText("[]");

        dayRelease.setText("Выпуск по дням");
        dayRelease.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dayReleaseItemStateChanged(evt);
            }
        });

        channelDirs.setEditable(false);
        channelDirs.setText("[]");

        dayDirBut.setText("Выбрать");
        dayDirBut.setEnabled(false);
        dayDirBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayDirButActionPerformed(evt);
            }
        });

        allowPassedChRelease.setText("Позволить выпускать в систему неполную телепрограмму");
        allowPassedChRelease.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                allowPassedChReleaseItemStateChanged(evt);
            }
        });

        cancelBut.setText("Отменить");

        saveBut.setText("Сохранить");
        saveBut.setToolTipText("");
        saveBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButActionPerformed(evt);
            }
        });

        userLable.setText("Текущий пользователь:");

        reloginBut.setText("Сменить пользователя");
        reloginBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloginButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reloginBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveBut)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBut))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(channelRelease)
                                .addGap(18, 18, 18)
                                .addComponent(channelDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(channelDirBut))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dayRelease)
                                .addGap(44, 44, 44)
                                .addComponent(dayDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayDirBut))
                            .addComponent(allowPassedChRelease))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(channelRelease)
                    .addComponent(channelDirBut)
                    .addComponent(channelDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayDirBut)
                    .addComponent(dayDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayRelease))
                .addGap(18, 18, 18)
                .addComponent(allowPassedChRelease)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(userLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBut)
                    .addComponent(saveBut)
                    .addComponent(reloginBut))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void channelReleaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_channelReleaseItemStateChanged
        if (!this.initRun) {
            this.releaseProps.setProperty("release_channel", Boolean.toString(this.channelRelease.isSelected()));
        }
        this.channelDirBut.setEnabled(this.channelRelease.isSelected());
    }//GEN-LAST:event_channelReleaseItemStateChanged

    private void dayReleaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dayReleaseItemStateChanged
        if (!this.initRun) {
            this.releaseProps.setProperty("release_day", Boolean.toString(this.dayRelease.isSelected()));
        }
        this.dayDirBut.setEnabled(this.dayRelease.isSelected());
    }//GEN-LAST:event_dayReleaseItemStateChanged

    private void saveButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButActionPerformed
        this.releaseProps.setProperty("release_chn_dir", this.channelDirs.getText());
        this.releaseProps.setProperty("release_day_dir", this.dayDirs.getText());
        JTVProg.tvApp.storeProperties("Release.properties", releaseProps);
        this.dispose();
    }//GEN-LAST:event_saveButActionPerformed

    private void allowPassedChReleaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_allowPassedChReleaseItemStateChanged
        if (!this.initRun) {
            this.releaseProps.setProperty("release_aloow_incomplete", Boolean.toString(this.allowPassedChRelease.isSelected()));
        }
    }//GEN-LAST:event_allowPassedChReleaseItemStateChanged

    private void channelDirButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelDirButActionPerformed
        final RibbonDirFrame dirFrame = new RibbonDirFrame(this, channelDirs);
        this.channelDirBut.setEnabled(false);
        this.dayDirBut.setEnabled(false);
        Thread dirConfig = new Thread() {
            @Override
            public void run() {
                dirFrame.setVisible(true);
            }
        };
        dirConfig.start();
        do {
            try {
                dirConfig.join(250);
            } catch (InterruptedException ex) {}
        } while (dirConfig.isAlive());
    }//GEN-LAST:event_channelDirButActionPerformed

    private void dayDirButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayDirButActionPerformed
        final RibbonDirFrame dirFrame = new RibbonDirFrame(this, this.dayDirs);
        this.channelDirBut.setEnabled(false);
        this.dayDirBut.setEnabled(false);
        Thread dirConfig = new Thread() {
            @Override
            public void run() {
                dirFrame.setVisible(true);
            }
        };
        dirConfig.start();
        do {
            try {
                dirConfig.join(250);
            } catch (InterruptedException ex) {}
        } while (dirConfig.isAlive());
    }//GEN-LAST:event_dayDirButActionPerformed

    private void reloginButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloginButActionPerformed
      new Thread() {
            @Override
            public void run() {
                UIComponents.LoginWindow loginFrame = new UIComponents.LoginWindow(JTVProg.tvApp, null);
                loginFrame.setVisible(true);
                loginFrame.waitForClose();
                userLable.setText("Текущий пользователь: " + JTVProg.tvApp.CURR_LOGIN);
            }
        }.start();
    }//GEN-LAST:event_reloginButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RibbonTVSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RibbonTVSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RibbonTVSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RibbonTVSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RibbonTVSettings dialog = new RibbonTVSettings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allowPassedChRelease;
    private javax.swing.JButton cancelBut;
    private javax.swing.JButton channelDirBut;
    private javax.swing.JTextField channelDirs;
    private javax.swing.JCheckBox channelRelease;
    private javax.swing.JButton dayDirBut;
    private javax.swing.JTextField dayDirs;
    private javax.swing.JCheckBox dayRelease;
    private javax.swing.JButton reloginBut;
    private javax.swing.JButton saveBut;
    private javax.swing.JLabel userLable;
    // End of variables declaration//GEN-END:variables
}
